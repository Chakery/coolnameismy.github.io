---
layout: post
title: 前端工程师开发环境和开发工具
category: front-end
tags:
keywords:
description:
---

> 有人说过程序员和码农的本质区别就是程序员会不断探索提高生产力的方法。思维模式的转变是提高生产力的最好方式，但打磨我们的工具也是十分有意义的事

本文读者可以安装顺序来，先安装nodejs和ruby的运行环境，接着把常用的前端开发工具安装起来。最后我们安装和配置一下submit常用的插件



## node.js环境安装

node.js这个名字看起来像是一个js库的名字，实际上差的很远。简单的说，nodejs是一个c++写的一个解释器，用于把javascript转换成电脑或服务器上可执行的代码。一般用来开发服务端代码或者是作为开发计算机脚本。前端工程师用nodejs主要是因为nodejs环境可以给前端开发带来方便

安装

````
//mac 、linux
=
1：先安装一个 nvm（ https://github.com/creationix/nvm ） 当然也可以不装，不过装了的好处是便于nodejs版本切换
$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.25.2/install.sh | bash

2：安装linux
$ nvm install 0.12

//查看nvm里面nodejs版本
$ nvm ls

//切换nodejs版本
$ nvm use 0.12


//访问主页下载安装
http://nodejs.cn/

````


## ruby环境安装

 
安装rvm

````
 $ curl -L https://get.rvm.io | bash -s stable
 $ source ~/.rvm/scripts/rvm
 $ rvm -v //打印版本号，检查安装是否正确

````

rvm操作

````
$ rvm list known //查找所有已知版本
$ rvm install xxx //安装xxx版本
$ rvm list //查看已安装版本
$ rvm remove xxx //移除xxx版本
$ rvm 2.0.0 --default //设置默认版本


````

ruby使用

````
//验证安装，打印版本号
ruby -v 
gem -v

//修改下载source地址
 $ gem source -r https://rubygems.org/
 $ gem source -a https://ruby.taobao.org
 $ gem sources -l  //验证成功

````

gem是ruby环境的安装工具，类似npm，后文中用到npm都是用nodejs安装的，gem都是ruby安装的



### 前端工程师推荐使用nodejs安装的工具

安装好了nodejs之后，就会自带一个npm的包管理工具，可以用它去安装一些其他的工具

npm常用命令：

````
//查看版本号
npm -v

//引导你创建一个package.json文件，包括名称、版本、作者这些信息等
npm init


//安装包 -g标示安装在全局 没有-g标示安装再本路径文件夹中
//安装bower示例
npm install -g bower

````

##  前端工程师使用nodejs必装的工具

###  [bower](http://bower.io/)
>	前端包依赖和管理工具

安装： npm install -g bower

---

###  [gruntjs](http://www.gruntjs.net/)
>	JavaScript 世界的构建工具

安装： npm install -g grunt-cli

---

###  [gulp.js](http://www.gulpjs.com.cn/)
>	用自动化构建工具增强你的工作流程!

安装： npm install --global gulp

---

###  [handlebarsjs](http://handlebarsjs.com/)


###  (compass)[http://compass-style.org/]
>	Compass是Sass的工具库（toolkit)

安装: gem install compass

推荐文章：http://www.ruanyifeng.com/blog/2012/11/compass.html

### sea.js


###  http-server 

 npm install http-server 


 emmet
 karma
 Yeoman